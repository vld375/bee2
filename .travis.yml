# Travis-CI Build for Bee2 (see travis-ci.org for details)
#
# Credits: 
# - https://raw.githubusercontent.com/mmcloughlin/meow/871e50784daff1c9ec5ef66fe3d8fda6bbcd42cf/.travis.yml

language: c 

branches:
  only:
  - master

env:
  global:
  
matrix:
  include:
  - os: linux
    compiler: gcc
    env:
    - COVERITY_SCAN_PROJECT_NAME="$TRAVIS_REPO_SLUG"
    - COVERITY_SCAN_BRANCH_PATTERN="master"
    - COVERITY_SCAN_NOTIFICATION_EMAIL="vld375@gmail.com"
    - COVERITY_SCAN_BUILD_COMMAND_PREPEND="cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_FAST=ON"
    - COVERITY_SCAN_BUILD_COMMAND="make"
    script:
    - curl -s 'https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh' | bash || true
  - os: linux
    compiler: gcc
    env: BUILD_TYPE="Release" BUILD_FAST="ON"  BASH_PLATFORM="BASH_64"
  - os: osx
    compiler: clang
    env: BUILD_TYPE="Release" BUILD_FAST="OFF" BASH_PLATFORM="BASH_32"
  - os: linux
    compiler: gcc
    env: BUILD_TYPE="MemSan" BUILD_FAST="ON" BASH_PLATFORM="BASH_AVX2" 
  - os: osx
    compiler: clang
    env: BUILD_TYPE="Check" BUILD_FAST="OFF" BASH_PLATFORM="BASH_SSE2"
  - os: linux
    dist: xenial
    arch: arm64
    compiler: gcc
    env: BUILD_TYPE="Release" BUILD_FAST="ON" BASH_PLATFORM="BASH_NEON" 
  - os: linux
    arch: s390x
    compiler: gcc
    env: BUILD_TYPE="Release" BUILD_FAST="ON" 
  - os: linux
    dist: xenial
    compiler: gcc
    env: BUILD_TYPE="Check" BUILD_FAST="ON" BASH_PLATFORM="BASH_AVX512"
    install:
    - export "SDE_VERSION_NAME=sde-external-8.63.0-2021-01-18-lin"
    - curl --verbose 
        --output sde.tar.bz2
        https://software.intel.com/content/dam/develop/external/us/en/documents/downloads/${SDE_VERSION_NAME}.tar.bz2
    - tar -xf sde.tar.bz2
    script: 
    - mkdir build && cd build 
    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_FAST=$BUILD_FAST -DBASH_PLATFORM=$BASH_PLATFORM ..
    - make
    - ../${SDE_VERSION_NAME}/sde64 -- ctest --verbose
  - os: linux
    compiler: gcc
    sudo: required
    env: BUILD_TYPE="Coverage" BUILD_FAST="OFF" BASH_PLATFORM="BASH_64"
    install:
    - sudo apt-get install -y lcov
    after_success:
    - lcov -c -i -d src -o coverage_base.info
    - test/testbee2
    - lcov -c -d src -o coverage_test.info
    - lcov -a coverage_base.info -a coverage_test.info -o coverage.info
    - bash <(curl -s https://codecov.io/bash) -f coverage.info

script: 
  - ls  -g /home/travis/build/vld375/bee2/build/src/*
  - mkdir build && cd build 
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_FAST=$BUILD_FAST -DBASH_PLATFORM=$BASH_PLATFORM ..
  - make
  - git branch -a
 # - cd ..
 # - git clone https://github.com/user/repo.git --branch autobuild --single-branch repo_autobuild
 # - cd repo_autobuild

# Copy newly created APK into the target directory
#mv ./* ./autobuild

# Setup git for commit and push
#git config --global user.email "travis@travis-ci.org"
#git config --global user.name "Travis CI"
#git remote add origin-master https://${AUTOBUILD_TOKEN}@github.com/user/repo > /dev/null 2>&1
#git add ./autobuild/snapshot.apk

# We donâ€™t want to run a build for a this commit in order to avoid circular builds:
# add [ci skip] to the git commit message
#git commit --message "Snapshot autobuild N.$TRAVIS_BUILD_NUMBER [ci skip]"
#git push origin-master
  
  
  
  
  
  
  - ls  /home/travis/build/vld375/bee2/build/src/*
  - cd ..
  - mkdir vld-build
  - cd vld-build
  - cp /home/travis/build/vld375/bee2/build/src/lib* .
  - cd ..
  - ls -R ./vld-build/*
  - git add ./vld-build/*
  - git commit --message "vld-commit"
  - git push https://tok1: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@gitlab.com/vld375/bee2.git origin master
  - git push origin master
  
  - ctest --verbose
  
 
  #- chmod +x ../autobuild-push.sh
after_success:
  - ls *
  - ./autobuild-push.sh
